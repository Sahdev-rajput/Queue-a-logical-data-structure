#include <iostream>
using namespace std;
struct node
{
	int data;
	struct node* next;
}*head=NULL;
struct node * traverse()
{
	struct node* p = head;
	while (p->next != NULL)
	{
		p = p->next;
	}
	return p;
}
void Push(int element)
{
	struct node* t;
	if (head == NULL)
	{
		t = new struct node;
		t->data = element;
		t->next = NULL;
		head = t;
	}
	else
	{
		struct node *temp=traverse();
		t = new struct node;
		t->data = element;
		t->next = NULL;
		temp->next = t;
	}
}
void Pop()
{
	if (head == NULL)
	{
		cout << "Queue is Empty" << endl;
	}
	else
	{
		struct node* temp = head;
		head = head->next;
		delete(temp);
	}
}
int Top()
{
	if (head == NULL)
	{
		cout << "Queue is empty no element to display" << endl;
	}
	else
	{
		cout << head->data << endl;
	}
	return 0;
}
void display()
{
	struct node* p = head;
	while (p)
	{
		cout << p->data << " ";
		p = p->next;
	}
	cout << endl;
}
int main()
{
	Push(1);
	Push(2);
	Push(3);
	Push(4);
	Push(5);
	Push(6);
	cout << "                                         --------IMPLEMENTATION OF QUEUE USING LINKED LIST----------                                " << endl;
	cout << endl << endl << "After Insertion,the Queue is: ";
	display();
	cout << endl << endl;
	Pop();
	cout << endl << endl << endl << "After popping out, the queue is: ";
	display();
	cout << endl << endl << endl;

}
